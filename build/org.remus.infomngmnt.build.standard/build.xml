<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     06.10.2008 21:18:48                                                        

     project    
     description
                   
     tmseidel                                                                
     ====================================================================== -->


<project name="project" default="build">

	<property name="build.dir.location" location="/opt/bamboo/bamboohome/xml-data/build-dir/RCP-TRUNK/build/org.remus.infomngmnt.build/N.RIM" />
	<property name="unzipTarget" location="/opt/bamboo/bamboohome/xml-data/build-dir/RCP-STANDARD/standard" />
	<property name="p2.marketplace.input.repo" value="/var/www/vhosts/remus-software.org/httpdocs/updatesites/remus" />
	<property name="deployDir" location="${unzipTarget}/RIM" />
	<property name="jar.test.location" location="/opt/eclipse/plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar" />
	<property name="p2.director.install.path" value="${deployDir}" />
	<property name="p2.director.destination" value="${deployDir}" />

	<!-- ================================= 
          target: pack              
         ================================= -->
	<target name="clean">
		<delete dir="${unzipTarget}">
		</delete>
	</target>

	<!-- ================================= 
          target: build              
         ================================= -->
	<target name="build" description="description">
		<delete failonerror="false">
			<fileset dir=".">
				<include name="*.zip" />
			</fileset>
		</delete>
		<antcall target="pack">
			<param name="pack.zip" value="RIM-win32.win32.x86.zip" />
			<param name="p2.os" value="win32" />
			<param name="p2.ws" value="win32" />
			<param name="p2.arch" value="x86" />
		</antcall>
		<antcall target="pack">
			<param name="pack.zip" value="RIM-linux.gtk.x86.zip" />
			<param name="p2.os" value="linux" />
			<param name="p2.ws" value="gtk" />
			<param name="p2.arch" value="x86" />
		</antcall>
		<antcall target="pack">
			<param name="pack.zip" value="RIM-win32.win32.x86_64.zip" />
			<param name="p2.os" value="win32" />
			<param name="p2.ws" value="win32" />
			<param name="p2.arch" value="x86_64" />
		</antcall>
		<antcall target="pack">
			<param name="pack.zip" value="RIM-linux.gtk.x86_64.zip" />
			<param name="p2.os" value="linux" />
			<param name="p2.ws" value="gtk" />
			<param name="p2.arch" value="x86_64" />
		</antcall>
		<antcall target="pack">
			<param name="pack.zip" value="RIM-macosx.carbon.ppc.zip" />
			<param name="p2.os" value="macosx" />
			<param name="p2.ws" value="carbon" />
			<param name="p2.arch" value="ppc" />
		</antcall>
		<antcall target="pack">
			<param name="pack.zip" value="RIM-macosx.cocoa.x86.zip" />
			<param name="p2.os" value="macosx" />
			<param name="p2.ws" value="cocoa" />
			<param name="p2.arch" value="x86" />
		</antcall>
	</target>


	<target name="pack" description="description" depends="clean">
		<unzip dest="${unzipTarget}" src="${build.dir.location}/${pack.zip}">
		</unzip>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomngmnt.mindmap.feature" />
		</antcall>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomgnmgnt.google.feature" />
			<param name="p2.os" value="${p2.os}" />
			<param name="p2.ws" value="${p2.ws}" />
			<param name="p2.arch" value="${p2.arch}" />
		</antcall>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomngmnt.calendar.feature" />
			<param name="p2.os" value="${p2.os}" />
			<param name="p2.ws" value="${p2.ws}" />
			<param name="p2.arch" value="${p2.arch}" />
		</antcall>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomgnmnt.multimedia.feature" />
			<param name="p2.os" value="${p2.os}" />
			<param name="p2.ws" value="${p2.ws}" />
			<param name="p2.arch" value="${p2.arch}" />
		</antcall>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomngmnt.textediting.feature" />
			<param name="p2.os" value="${p2.os}" />
			<param name="p2.ws" value="${p2.ws}" />
			<param name="p2.arch" value="${p2.arch}" />
		</antcall>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomngmnt.filebased.feature" />
			<param name="p2.os" value="${p2.os}" />
			<param name="p2.ws" value="${p2.ws}" />
			<param name="p2.arch" value="${p2.arch}" />
		</antcall>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomngmnt.pdf.feature" />
			<param name="p2.os" value="${p2.os}" />
			<param name="p2.ws" value="${p2.ws}" />
			<param name="p2.arch" value="${p2.arch}" />
		</antcall>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomngmnt.contacttask.feature" />
			<param name="p2.os" value="${p2.os}" />
			<param name="p2.ws" value="${p2.ws}" />
			<param name="p2.arch" value="${p2.arch}" />
		</antcall>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomngmnt.groovy.feature" />
			<param name="p2.os" value="${p2.os}" />
			<param name="p2.ws" value="${p2.ws}" />
			<param name="p2.arch" value="${p2.arch}" />
		</antcall>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomngmnt.link.feature" />
			<param name="p2.os" value="${p2.os}" />
			<param name="p2.ws" value="${p2.ws}" />
			<param name="p2.arch" value="${p2.arch}" />
		</antcall>
		<antcall target="installFeatureFromMarketplace">
			<param name="marketplace.installUI" value="org.remus.infomngmnt.rss.feature" />
			<param name="p2.os" value="${p2.os}" />
			<param name="p2.ws" value="${p2.ws}" />
			<param name="p2.arch" value="${p2.arch}" />
		</antcall>
		<delete dir="${unzipTarget}/RIM/workspace" failonerror="false">
		</delete>
		<file />
		
		<!--
		<antcall target="writeLinuxPermission" />
		<antcall target="writeApplePermission" />
		-->
		<copyfile dest="${pack.zip}" src="${build.dir.location}/${pack.zip}"/>
		<zip destfile="${pack.zip}" preserve0permissions="true" update="true">
			<zipfileset dir="${unzipTarget}/RIM/features" fullpath="RIM/features" />
			<zipfileset dir="${unzipTarget}/RIM/plugins" fullpath="RIM/plugins" />
			<zipfileset dir="${unzipTarget}/RIM/configuration" fullpath="RIM/configuration" />
			<zipfileset dir="${unzipTarget}/RIM/p2" fullpath="RIM/p2" />
			<zipfileset dir="${unzipTarget}/RIM/artifacts.xml" fullpath="RIM/artifacts.xml" />
		</zip>

	</target>
		
	<target name="checkLinux">
	    <available file="${unzipTarget}/RIM/rim" property="linux.file.exists"/>
	</target>
	
	<target name="checkMac" unless="file.exists">
	    <available file="${unzipTarget}/RIM/rim.app" type="dir" property="apple.file.exists"/>
	</target>
	
	<target name="writeLinuxPermission" depends="checkLinux" if="linux.file.exists">
		<chmod perm="u+x" file="${unzipTarget}/RIM/rim"></chmod>
	</target>
	
	<target name="writeApplePermission" depends="checkMac" if="apple.file.exists">
		<chmod perm="u+x" dir="${unzipTarget}/RIM/rim.app" failonerror="false" includes="**/**"/>
	</target>



	<target name="installFeatureFromMarketplace">
		<java failonerror="true" fork="true" jar="${jar.test.location}">
			<arg line=" -application org.eclipse.equinox.p2.director" />
			<arg line=" -repository file:${p2.marketplace.input.repo}" />
			<arg line=" -installIU ${marketplace.installUI}.feature.group" />
			<arg line=" -destination ${p2.director.install.path}" />
			<arg line=" -profile profile" />
			<arg line=" -profileProperties org.eclipse.update.install.features=true" />
			<arg line=" -bundlepool ${p2.director.destination}" />
			<arg line=" -consoleLog" />
			<arg line=" -p2.os ${p2.os}" />
			<arg line=" -p2.ws ${p2.ws}" />
			<arg line=" -p2.arch ${p2.arch}" />
			<!--<arg line=" -vmargs" />
			<arg line=" -Declipse.p2.data.area=${p2.director.destination}/p2" />
			<arg line=" -Declipse.p2.MD5Check=false" />-->
		</java>
	</target>


</project>
